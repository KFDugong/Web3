name: CI

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install MongoDB
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org

      - name: Start MongoDB
        run: sudo mongod --fork --logpath /var/log/mongodb.log --dbpath /var/lib/mongodb

      - name: Install backend dependencies
        working-directory: "./Web2-master/Übung 1/Meilenstein 3"
        run: npm ci

      - name: Install frontend dependencies
        working-directory: "./Web2-master/reactms1"
        run: npm ci

      - name: Start backend server
        working-directory: "./Web2-master/Übung 1/Meilenstein 3"
        run: sudo npm start &

      - name: Start frontend server
        working-directory: "./Web2-master/reactms1"
        run: sudo npm start &

      - name: Wait for frontend server to start
        run: |
          frontend_up() {
            curl -s http://localhost:3000 > /dev/null
          }
          until frontend_up; do
            echo "Waiting for servers to start..."
            sleep 5
          done

      - name: Install Playwright dependencies
        working-directory: "./Test-Environment"
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        working-directory: "./Test-Environment"
        run: npx playwright test

      - name: Upload test artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./Test-Environment/results
